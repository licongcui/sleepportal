<% unless @common_identifier %>
  <div class="center">You must have either <span class='source_rule_text'>view data distribution</span> or <span class='source_rule_text'>download dataset</span> to do matching against this data source.</div>
<% else %>

  <% if @cases and @controls %>
    <% total = @matches.count %>
    <% matched = @matches.select{|match| match[:matching_ids].count == @controls_per_case}.count %>
    <% partial = @matches.select{|match| match[:matching_ids].count > 0 and match[:matching_ids].count < @controls_per_case}.count %>
    <% unmatched = @matches.select{|match| match[:matching_ids].count == 0}.count %>

    <% if total > 0 %>
      <div class="progress">
        <div class="bar bar-success" style="width: <%= "%0.04f" % (matched * 100.0 / total) %>%;"><%= "%0.01f" % (matched * 100.0 / total) %>%</div>
        <div class="bar bar-warning" style="width: <%= "%0.04f" % (partial * 100.0 / total) %>%;"><%= "%0.01f" % (partial * 100.0 / total) %>%</div>
        <div class="bar bar-danger" style="width: <%= "%0.04f" % (unmatched * 100.0 / total) %>%;"><%= "%0.01f" % (unmatched * 100.0 / total) %>%</div>
      </div>
    <% end %>
  <div style="clear:both"></div>
  <% end %>

  <%= link_to 'Download CSV', matching_path(format: 'csv', cases_id: params[:cases_id], controls_id: params[:controls_id], criteria_ids: params[:criteria_ids], variable_ids: params[:variable_ids], controls_per_case: @controls_per_case), class: 'btn' %>

  <%= link_to 'Copy Configuration to URL Bar', matching_path(cases_id: params[:cases_id], controls_id: params[:controls_id], criteria_ids: params[:criteria_ids], variable_ids: params[:variable_ids], controls_per_case: @controls_per_case), class: 'btn' %>


<%#= @extra_concepts.inspect %>

<hr class="soften" style="margin: 20px 0px">

<% @extra_concepts.each_with_index do |concept, index| %>
  <div>
    <% case_values = @matches.collect{|m| m[:case_extra][index]} %>
    <% control_values = @matches.collect{|m| m[:extra].collect{|arr| arr[index]}}.flatten %>
    <% if concept.categorical? or concept.boolean? %>
      <table class="table table-striped table-hover" style="width:100%">
        <thead>
          <tr>
            <th style="text-align:left"><%= concept.human_name %></th>
            <th style="text-align:left">Cases</th>
            <th style="text-align:left">Controls</th>
            <th style="text-align:left">Total</th>
          </tr>
        </thead>
        <tbody>
          <% (case_values.uniq | control_values.uniq).sort.each do |val| %>
            <tr>
              <td><%= val %></td>
              <td><%= case_values.select{|v| v == val}.count %></td>
              <td><%= control_values.select{|v| v == val}.count %></td>
              <td><%= case_values.select{|v| v == val}.count + control_values.select{|v| v == val}.count %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% elsif concept.continuous? %>
      <table class="table table-striped table-hover" style="width:100%">
        <thead>
          <tr>
            <th style="text-align:left"><%= concept.human_name %></th>
            <th style="text-align:left">N</th>
            <th style="text-align:left">Mean</th>
            <th style="text-align:left">StdDev</th>
            <th style="text-align:left">Median</th>
            <th style="text-align:left">Min</th>
            <th style="text-align:left">Max</th>
            <th style="text-align:left;" class="muted">Unknown</th>
            <th style="text-align:left">Total</th>
          </tr>
        </thead>
        <tbody>
          <% [["Cases", case_values], ["Controls", control_values]].each do |name, values| %>
            <tr>
              <td><%= name %></td>
              <td><%= values.compact.count %></td>
              <td>
                <% mean = array_mean(values) %>
                <%= "%0.02f" % mean if mean %>
              </td>
              <td>
                <% stdev = array_standard_deviation(values) %>
                <%= "%0.02f" % stdev if stdev %>
              </td>
              <td><%= array_median(values) %></td>
              <td><%= array_min(values) %></td>
              <td><%= array_max(values) %></td>
              <td><%= (values.compact.count == values.count) ? '-' : values.count - values.compact.count %></td>
              <td><%= values.count %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% end %>
  </div>
<% end %>


<% if false %>
  <% if @cases and @controls %>
    <table class="table table-striped table-hover" style="width:100%">
      <thead>
        <tr>
          <th>Case ID (<%= @matches.collect{|i| i[:id]}.count %>)</th>
          <th>Control ID<%= 's' if @controls_per_case > 1 %> (<%= @matches.collect{|i| i[:matching_ids]}.flatten.count %>)</th>
          <th>Matched on</th>
        </tr>
      </thead>
      <tbody>
        <% @matches.sort{ |a,b| a[:matching_ids].count <=> b[:matching_ids].count }.each do |match| %>
        <tr class="<%= (match[:matching_ids].count == 0) ? 'error' : (match[:matching_ids].count < @controls_per_case ? 'warning' : nil) %>">
          <td><%= match[:id] %></td>
          <td><%= match[:matching_ids].join(', ') %></td>
          <td><%= match[:criteria].join(', ') %></td>
        </tr>
        <% end %>
      </tbody>
    </table>

  <% end %>
<% end %>

<% end %>
